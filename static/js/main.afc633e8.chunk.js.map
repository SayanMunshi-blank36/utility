{"version":3,"sources":["components/Navbar.js","components/TextForms.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","style","textDecoration","color","fontFamily","placeholder","onClick","toggleMode","htmlFor","defaultProps","aboutText","TextForms","useState","text","setText","myStyle","setmyStyle","heading","value","backgroundColor","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","split","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.afc633e8.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n                <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                    <li className=\"nav-item my-2\">\r\n                    {/* <Link className=\"nav-Link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                    <a className=\"nav-Link active\" aria-current=\"page\" href=\"#\" style={{textDecoration:\"none\", color: \"#000\", fontFamily: \"montserrat\"}}>Home</a>\r\n                    </li>\r\n                    {/* <li className=\"nav-item\">\r\n                    <Link className=\"nav-Link active\" aria-current=\"page\" to=\"/about\">{props.aboutText}</Link>\r\n                    </li> */}\r\n                    <button className=\"btn mx-2 btn-success\">Green</button>\r\n                    <button className=\"btn mx-2 btn-danger\">Red</button>\r\n                    <button className=\"btn mx-2 btn-primary\">Blue</button>\r\n                    <button className=\"btn mx-2 btn-warning\">Yellow</button>\r\n                </ul>\r\n                <form className=\"d-flex\">\r\n                    <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                    <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n                </form>\r\n                <div className=\"form-check form-switch\">\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className={`form-check-label text-${props.mode===\"light\" ? \"dark\" : \"light\"}`} htmlFor=\"flexSwitchCheckDefault\">Enable Darkmode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {title : PropTypes.string.isRequired, aboutText : PropTypes.string.isRequired};\r\n\r\nNavbar.defaultProps = {\r\n    title : \"Set Title Here\",\r\n    aboutText : \"About Text Here\"\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextForms(props) {\r\n\r\n    const handleUpClick = () => {\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase\", \"success\");\r\n    }\r\n\r\n    const handleDownClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase\", \"success\");\r\n    }\r\n\r\n    const handleClear = () => {\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"On Change\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleRed = () => {\r\n        setmyStyle({\r\n            color : \"red\"\r\n        })\r\n        props.showAlert(\"Converted to red\", \"success\");\r\n    }\r\n\r\n    const [text, setText] = useState(\"\");\r\n\r\n    const [myStyle, setmyStyle] = useState({\r\n        color : \"black\"\r\n    });\r\n\r\n    // setText(\"New Text\");\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{color: props.mode === \"dark\" ? \"white\" : \"black\"}}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} style={{backgroundColor: props.mode===\"dark\"?\"gray\":\"white\", color: props.mode === \"dark\" ? \"white\" : \"black\"}} onChange={handleOnChange} id=\"myBox\" rows=\"8\" style={myStyle}></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert To UpperCase</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleDownClick}>Convert To LowerCase</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleClear}>Clear Text</button>\r\n                <button className=\"btn btn-danger mx-2\" onClick={handleRed}>Change To Red</button>\r\n            </div>\r\n\r\n            <div className=\"container my-3\" style={{color: props.mode === \"dark\" ? \"white\" : \"black\"}}>\r\n                <h1>Your Text Summary</h1>\r\n                <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n                <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0?text:\"Enter something in the text box above to preview here\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n            props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n            </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForms from './components/TextForms';\n// import About from './components/About';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); // Whether Dark Mode is Enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg : message,\n      type : type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  const toggleMode = () => {\n    if(mode === \"light\"){\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been enabled\", \"success\");\n    }\n  }\n  \n  return (\n    <>\n      {/* <Navbar /> */}\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" aboutText=\"About Textutils\" mode={mode} toggleMode={toggleMode}/>\n        <Alert alert={alert}/>\n        <div className=\"container my-3\">\n          {/* <Switch> */}\n            {/* <Route exact path=\"/about\">\n              <About />\n            </Route> */}\n            {/* <Route exact path=\"/\"> */}\n              <TextForms showAlert={showAlert} heading=\"Enter Text To Analyse Below\" mode={mode}/>\n            {/* </Route> */}\n          {/* </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}